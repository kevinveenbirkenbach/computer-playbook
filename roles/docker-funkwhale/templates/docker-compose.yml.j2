version: "3"

services:

{% include 'templates/docker-redis-service.yml.j2' %}

    env_file: .env

  celeryworker:
    restart: always
    image: funkwhale/api:${FUNKWHALE_VERSION:-latest}
    depends_on:
{% if not ( enable_central_database | lower | bool )  %}
      - postgres
% endif %}      
      - redis
    env_file: .env
    command: celery -A funkwhale_api.taskapp worker -l INFO --concurrency=${CELERYD_CONCURRENCY-0}
    environment:
      - C_FORCE_ROOT=true
    volumes:
      - "data:${MEDIA_ROOT}"

  celerybeat:
    restart: always
    image: funkwhale/api:${FUNKWHALE_VERSION:-latest}
    depends_on:
{% if not ( enable_central_database | lower | bool )  %}
      - postgres
% endif %}
      - redis
    env_file: .env
    command: celery -A funkwhale_api.taskapp beat --pidfile= -l INFO

  api:
    restart: always
    image: funkwhale/api:${FUNKWHALE_VERSION:-latest}
    depends_on:
      - postgres
      - redis
    env_file: .env
    volumes:
      - "data:${MEDIA_ROOT}"
      #- "${STATIC_ROOT}:${STATIC_ROOT}"
    ports:
      - "5000"

  front:
    restart: always
    image: funkwhale/front:${FUNKWHALE_VERSION:-latest}
    depends_on:
      - api
    env_file:
      - .env
    environment:
      # Override those variables in your .env file if needed
      - "NGINX_MAX_BODY_SIZE=${NGINX_MAX_BODY_SIZE-100M}"
    volumes:
      - "data:${MEDIA_ROOT}:ro"
      #- "${STATIC_ROOT}:${STATIC_ROOT}:ro"
    ports:
      # override those variables in your .env file if needed
      - "${FUNKWHALE_API_IP}:${FUNKWHALE_API_PORT}:80"

{% if not ( enable_central_database | lower | bool )  %}
{% include 'templates/docker-postgres-service.yml.j2' %}
{% endif %}

volumes:
  data:
  redis:

{% if not ( enable_central_database | lower | bool )  %}
  database:
{% endif %}