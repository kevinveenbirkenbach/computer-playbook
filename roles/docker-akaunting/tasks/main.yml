---
- name: recieve {{domain}} certificate
  command: certbot certonly --agree-tos --email {{administrator_email}} --non-interactive --webroot -w /var/lib/letsencrypt/ -d {{domain}}

- name: configure {{domain}}.conf
  template: src=roles/native-docker-reverse-proxy/templates/domain.conf.j2 dest=/etc/nginx/conf.d/{{domain}}.conf
  notify: restart nginx

- name: register directory
  stat:
    path: "{{docker_compose_akaunting_path}}"
  register: docker_compose_akaunting_path_register

- name: checkout repository 
  ansible.builtin.shell: git checkout .
  become: true
  args:
    chdir: "{{docker_compose_akaunting_path}}"
  when: docker_compose_akaunting_path_register.stat.exists

- name: pull docker repository
  git:
    repo: "https://github.com/akaunting/docker.git"
    dest: "{{docker_compose_akaunting_path}}"
    update: yes
  notify: setup akaunting
  become: true
  register: git_result
  ignore_errors: true

- name: Warn if repo is not reachable
  debug:
    msg: "Warning: Repository is not reachable."
  when: git_result.failed

- name: set akaunting version
  ansible.builtin.shell: find . -type f -exec sed -i 's/akaunting:latest/akaunting:{{akaunting_version}}/' {} + && find . -type f -exec sed -i 's/version=latest/version={{akaunting_version}}/' {} + 
  become: true
  args:
    chdir: "{{docker_compose_akaunting_path}}"

- name: configure db.env
  template: src=db.env.j2 dest={{docker_compose_akaunting_path}}/env/db.env
  notify: setup akaunting

- name: configure run.env
  template: src=run.env.j2 dest={{docker_compose_akaunting_path}}/env/run.env
  notify: setup akaunting
